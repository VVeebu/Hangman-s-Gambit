name: Build and Release Game

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    # Use a matrix strategy to build on all three major operating systems
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            asset_name_suffix: linux
            asset_content_type: application/zip
          - os: macos-latest
            asset_name_suffix: macos
            asset_content_type: application/zip
          - os: windows-latest
            asset_name_suffix: windows
            asset_content_type: application/zip

    runs-on: ${{ matrix.os }}

    steps:
    - name: Logging
      run: |
        echo "Operating System: ${{ matrix.os }}"
        
    - name: Checkout repository
      uses: actions/checkout@v5

    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: '3.8'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: (Linux Only) Install system dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libfreetype6-dev libjpeg-dev zlib1g-dev libsdl2-mixer-2.0-0 libsdl2-image-2.0-0 libsdl2-2.0-0
      # These are dependencies for Pillow (freetype, jpeg, zlib) and Pygame (sdl2)

    - name: Build executable with PyInstaller
      run: |
        pyinstaller --name HangmansGambit \
                    --onefile \
                    --windowed \
                    --add-data "Assets:Assets" \
                    "Hangman's Gambit.py"

    - name: Prepare artifact for release
      run: |
        cd dist
        zip -r ../HangmansGambit-${{ matrix.asset_name_suffix }}.zip .
      if: runner.os != 'Windows'

    - name: Prepare artifact for release (Windows)
      run: |
        Compress-Archive -Path dist/* -DestinationPath HangmansGambit-${{ matrix.asset_name_suffix }}.zip
      if: runner.os == 'Windows'

    - name: Create Release and Upload Asset
      uses: softprops/action-gh-release@v2
      with:
        files: HangmansGambit-${{ matrix.asset_name_suffix }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
